{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "ARM Template",
      "version": "1.0.0.0",
      "templateHash": "18RealTimeMonitoringAlerting"
    }
  },
  "parameters": {
    "appServiceName": {
      "type": "string",
      "minLength": 2,
      "maxLength": 60,
      "metadata": {
        "description": "The name of the Azure App Service to monitor. Must be globally unique."
      }
    },
    "logicAppName": {
      "type": "string",
      "minLength": 2,
      "maxLength": 80,
      "metadata": {
        "description": "The name of the Logic App for alert processing."
      }
    },
    "alertEmail": {
      "type": "string",
      "metadata": {
        "description": "Email address to receive monitoring alerts."
      }
    },
    "responseTimeThresholdSeconds": {
      "type": "int",
      "defaultValue": 5,
      "minValue": 1,
      "maxValue": 30,
      "metadata": {
        "description": "Alert when response time exceeds this many seconds."
      }
    },
    "errorRateThresholdPercent": {
      "type": "int",
      "defaultValue": 5,
      "minValue": 1,
      "maxValue": 50,
      "metadata": {
        "description": "Alert when error rate exceeds this percentage."
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "appServicePlanName": "[format('plan-{0}', parameters('appServiceName'))]",
    "applicationInsightsName": "[format('ai-{0}', parameters('appServiceName'))]",
    "logAnalyticsWorkspaceName": "[format('law-{0}', parameters('appServiceName'))]",
    "actionGroupName": "[format('ag-{0}', parameters('appServiceName'))]",
    "availabilityAlertName": "[format('alert-availability-{0}', parameters('appServiceName'))]",
    "responseTimeAlertName": "[format('alert-responsetime-{0}', parameters('appServiceName'))]",
    "errorRateAlertName": "[format('alert-errorrate-{0}', parameters('appServiceName'))]",
    "cpuAlertName": "[format('alert-cpu-{0}', parameters('appServiceName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[variables('logAnalyticsWorkspaceName')]",
      "location": "[variables('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[variables('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "S1",
        "tier": "Standard"
      },
      "properties": {
        "name": "[variables('appServicePlanName')]",
        "reserved": false
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[parameters('appServiceName')]",
      "location": "[variables('location')]",
      "kind": "app",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "ftpsState": "Disabled",
          "minTlsVersion": "1.2",
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))).InstrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))).ConnectionString]"
            },
            {
              "name": "ApplicationInsightsAgent_EXTENSION_VERSION",
              "value": "~3"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
      ]
    },
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2019-05-01",
      "name": "[parameters('logicAppName')]",
      "location": "[variables('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "alertEmail": {
              "type": "String"
            }
          },
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "schemaId": { "type": "string" },
                    "data": {
                      "type": "object",
                      "properties": {
                        "context": {
                          "type": "object",
                          "properties": {
                            "timestamp": { "type": "string" },
                            "name": { "type": "string" },
                            "description": { "type": "string" }
                          }
                        },
                        "status": { "type": "string" },
                        "alertRule": {
                          "type": "object",
                          "properties": {
                            "name": { "type": "string" },
                            "description": { "type": "string" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "actions": {
            "Parse_Alert_Data": {
              "runAfter": {},
              "type": "Compose",
              "inputs": {
                "alertName": "@triggerBody()?['data']?['context']?['name']",
                "alertDescription": "@triggerBody()?['data']?['context']?['description']",
                "status": "@triggerBody()?['data']?['status']",
                "timestamp": "@triggerBody()?['data']?['context']?['timestamp']",
                "ruleName": "@triggerBody()?['data']?['alertRule']?['name']"
              }
            },
            "Send_Email_Alert": {
              "runAfter": {
                "Parse_Alert_Data": [
                  "Succeeded"
                ]
              },
              "type": "Http",
              "inputs": {
                "method": "POST",
                "uri": "https://prod-00.westus.logic.azure.com/workflows/12345678-1234-1234-1234-123456789012/triggers/manual/paths/invoke?api-version=2016-06-01",
                "headers": {
                  "Content-Type": "application/json"
                },
                "body": {
                  "to": "@parameters('alertEmail')",
                  "subject": "ðŸš¨ Azure Monitor Alert: @{outputs('Parse_Alert_Data')?['alertName']}",
                  "htmlBody": "<h2>ðŸš¨ Azure Monitor Alert</h2><table border='1' style='border-collapse:collapse;'><tr><th style='padding:8px;background:#f0f0f0;'>Alert</th><td style='padding:8px;'>@{outputs('Parse_Alert_Data')?['alertName']}</td></tr><tr><th style='padding:8px;background:#f0f0f0;'>Status</th><td style='padding:8px;'>@{outputs('Parse_Alert_Data')?['status']}</td></tr><tr><th style='padding:8px;background:#f0f0f0;'>Description</th><td style='padding:8px;'>@{outputs('Parse_Alert_Data')?['alertDescription']}</td></tr><tr><th style='padding:8px;background:#f0f0f0;'>Rule</th><td style='padding:8px;'>@{outputs('Parse_Alert_Data')?['ruleName']}</td></tr><tr><th style='padding:8px;background:#f0f0f0;'>Time</th><td style='padding:8px;'>@{outputs('Parse_Alert_Data')?['timestamp']}</td></tr></table>",
                  "textBody": "Azure Monitor Alert: @{outputs('Parse_Alert_Data')?['alertName']} - Status: @{outputs('Parse_Alert_Data')?['status']} - @{outputs('Parse_Alert_Data')?['timestamp']}"
                }
              }
            }
          },
          "outputs": {}
        },
        "parameters": {
          "alertEmail": {
            "value": "[parameters('alertEmail')]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Insights/actionGroups",
      "apiVersion": "2023-01-01",
      "name": "[variables('actionGroupName')]",
      "location": "Global",
      "properties": {
        "groupShortName": "AppAlerts",
        "enabled": true,
        "emailReceivers": [
          {
            "name": "EmailAlert",
            "emailAddress": "[parameters('alertEmail')]",
            "useCommonAlertSchema": true
          }
        ],
        "webhookReceivers": [
          {
            "name": "LogicAppWebhook",
            "serviceUri": "[listCallbackURL(concat(resourceId('Microsoft.Logic/workflows', parameters('logicAppName')), '/triggers/manual'), '2019-05-01').value]",
            "useCommonAlertSchema": true
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Logic/workflows', parameters('logicAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[variables('availabilityAlertName')]",
      "location": "Global",
      "properties": {
        "description": "Alert when the app service is not available",
        "severity": 1,
        "enabled": true,
        "scopes": [
          "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
        ],
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
          "allOf": [
            {
              "name": "AvailabilityCheck",
              "metricName": "HealthCheckStatus",
              "operator": "LessThan",
              "threshold": 1,
              "timeAggregation": "Average"
            }
          ]
        },
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]",
        "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[variables('responseTimeAlertName')]",
      "location": "Global",
      "properties": {
        "description": "Alert when response time is too high",
        "severity": 2,
        "enabled": true,
        "scopes": [
          "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
        ],
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
          "allOf": [
            {
              "name": "ResponseTimeCheck",
              "metricName": "HttpResponseTime",
              "operator": "GreaterThan",
              "threshold": "[parameters('responseTimeThresholdSeconds')]",
              "timeAggregation": "Average"
            }
          ]
        },
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]",
        "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[variables('errorRateAlertName')]",
      "location": "Global",
      "properties": {
        "description": "Alert when HTTP error rate is too high",
        "severity": 2,
        "enabled": true,
        "scopes": [
          "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
        ],
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
          "allOf": [
            {
              "name": "ErrorRateCheck",
              "metricName": "Http5xx",
              "operator": "GreaterThan",
              "threshold": "[parameters('errorRateThresholdPercent')]",
              "timeAggregation": "Total"
            }
          ]
        },
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]",
        "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/metricAlerts",
      "apiVersion": "2018-03-01",
      "name": "[variables('cpuAlertName')]",
      "location": "Global",
      "properties": {
        "description": "Alert when CPU usage is too high",
        "severity": 3,
        "enabled": true,
        "scopes": [
          "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
        ],
        "evaluationFrequency": "PT1M",
        "windowSize": "PT5M",
        "criteria": {
          "odata.type": "Microsoft.Azure.Monitor.SingleResourceMultipleMetricCriteria",
          "allOf": [
            {
              "name": "CpuUsageCheck",
              "metricName": "CpuPercentage",
              "operator": "GreaterThan",
              "threshold": 80,
              "timeAggregation": "Average"
            }
          ]
        },
        "actions": [
          {
            "actionGroupId": "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]",
        "[resourceId('Microsoft.Insights/actionGroups', variables('actionGroupName'))]"
      ]
    }
  ],
  "outputs": {
    "appServiceUrl": {
      "type": "string",
      "value": "[format('https://{0}.azurewebsites.net', parameters('appServiceName'))]"
    },
    "logicAppName": {
      "type": "string",
      "value": "[parameters('logicAppName')]"
    },
    "logicAppTriggerUrl": {
      "type": "string",
      "value": "[listCallbackURL(concat(resourceId('Microsoft.Logic/workflows', parameters('logicAppName')), '/triggers/manual'), '2019-05-01').value]"
    },
    "applicationInsightsInstrumentationKey": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))).InstrumentationKey]"
    },
    "monitoringDashboardUrl": {
      "type": "string",
      "value": "[format('https://portal.azure.com/#@/resource{0}/overview', resourceId('Microsoft.Web/sites', parameters('appServiceName')))]"
    }
  }
} 