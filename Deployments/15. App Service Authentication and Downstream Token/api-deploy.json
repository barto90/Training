{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "apiServiceName": {
      "type": "string",
      "metadata": {
        "description": "The name of the API app service"
      }
    },
    "clientId": {
      "type": "string",
      "metadata": {
        "description": "The Azure AD client ID (App Registration) for authentication"
      }
    },
    "clientSecret": {
      "type": "secureString",
      "metadata": {
        "description": "The Azure AD client secret for authentication"
      }
    },
    "appServicePlanSku": {
      "type": "string",
      "defaultValue": "B1",
      "allowedValues": [
        "F1",
        "B1",
        "S1",
        "P1V2",
        "P1V3"
      ],
      "metadata": {
        "description": "The SKU of the App Service Plan"
      }
    }
  },
  "variables": {
    "hostingPlanName": "[format('plan-{0}', parameters('apiServiceName'))]",
    "location": "[resourceGroup().location]",
    "applicationInsightsName": "[format('ai-{0}', parameters('apiServiceName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[variables('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Request_Source": "rest"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "[parameters('appServicePlanSku')]",
        "tier": "[if(equals(parameters('appServicePlanSku'), 'F1'), 'Free', if(equals(parameters('appServicePlanSku'), 'B1'), 'Basic', 'Standard'))]",
        "size": "[parameters('appServicePlanSku')]",
        "family": "[if(equals(parameters('appServicePlanSku'), 'F1'), 'F', if(equals(parameters('appServicePlanSku'), 'B1'), 'B', 'S'))]",
        "capacity": 1
      },
      "properties": {
        "perSiteScaling": false,
        "reserved": false,
        "isXenon": false,
        "hyperV": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[parameters('apiServiceName')]",
      "location": "[variables('location')]",
      "kind": "app",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "httpsOnly": true,
        "siteConfig": {
          "ftpsState": "Disabled",
          "minTlsVersion": "1.2",
          "http20Enabled": true,
          "nodeVersion": "~18",
          "defaultDocuments": [
            "server.js",
            "index.js",
            "app.js"
          ],
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))).InstrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))).ConnectionString]"
            },
            {
              "name": "MICROSOFT_PROVIDER_AUTHENTICATION_SECRET",
              "value": "[parameters('clientSecret')]"
            },
            {
              "name": "NODE_ENV",
              "value": "production"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~18"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2022-03-01",
      "name": "[format('{0}/{1}', parameters('apiServiceName'), 'authsettingsV2')]",
      "properties": {
            "globalValidation": {
      "requireAuthentication": true,
      "unauthenticatedClientAction": "Return401"
    },
        "httpSettings": {
          "requireHttps": true,
          "routes": {
            "apiPrefix": "/.auth"
          }
        },
        "identityProviders": {
          "azureActiveDirectory": {
            "enabled": true,
            "registration": {
              "openIdIssuer": "[format('https://sts.windows.net/{0}/', subscription().tenantId)]",
              "clientId": "[parameters('clientId')]",
              "clientSecretSettingName": "MICROSOFT_PROVIDER_AUTHENTICATION_SECRET"
            },
            "validation": {
              "jwtClaimChecks": {},
              "allowedAudiences": [
                "[format('api://{0}', parameters('clientId'))]",
                "[parameters('clientId')]"
              ]
            }
          }
        },
        "login": {
          "routes": {
            "logoutEndpoint": "/.auth/logout"
          },
          "tokenStore": {
            "enabled": true,
            "tokenRefreshExtensionHours": 72,
            "fileSystem": {
              "directory": "/home/data/.auth"
            }
          },
          "preserveUrlFragmentsForLogins": false,
          "allowedExternalRedirectUrls": [],
          "cookieExpiration": {
            "convention": "FixedTime",
            "timeToExpiration": "08:00:00"
          },
          "nonce": {
            "validateNonce": true,
            "nonceExpirationInterval": "00:05:00"
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('apiServiceName'))]"
      ]
    }
  ],
  "outputs": {
    "apiServiceName": {
      "type": "string",
      "value": "[parameters('apiServiceName')]"
    },
    "apiServiceUrl": {
      "type": "string",
      "value": "[format('https://{0}.azurewebsites.net', parameters('apiServiceName'))]"
    },
    "managedIdentityPrincipalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('apiServiceName')), '2022-03-01', 'full').identity.principalId]"
    },
    "authLoginUrl": {
      "type": "string",
      "value": "[format('https://{0}.azurewebsites.net/.auth/login/aad', parameters('apiServiceName'))]"
    },
    "apiWelcomeUrl": {
      "type": "string",
      "value": "[format('https://{0}.azurewebsites.net/api/welcome', parameters('apiServiceName'))]"
    }
  }
} 